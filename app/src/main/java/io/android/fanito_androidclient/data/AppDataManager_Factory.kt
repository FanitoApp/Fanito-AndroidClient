package io.android.fanito_androidclient.data

// Generated by Dagger (https://dagger.dev).
package io.android.fanito_androidclient.data;

import android.content.Context;
import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.android.fanito_androidclient.data.local.prefs.PreferencesHelper;
import io.android.fanito_androidclient.data.remote.ApiHelper;
import io.android.fanito_androidclient.data.resource.ResourceHelper;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppDataManager_Factory implements Factory<AppDataManager> {
    private final Provider<Context> mContextProvider;

    private final Provider<PreferencesHelper> preferencesHelperProvider;

    private final Provider<ApiHelper> apiHelperProvider;

    private final Provider<Gson> gsonProvider;

    private final Provider<ResourceHelper> resourceHelperProvider;

    public AppDataManager_Factory(Provider<Context> mContextProvider,
    Provider<PreferencesHelper> preferencesHelperProvider, Provider<ApiHelper> apiHelperProvider,
    Provider<Gson> gsonProvider, Provider<ResourceHelper> resourceHelperProvider) {
        this.mContextProvider = mContextProvider;
        this.preferencesHelperProvider = preferencesHelperProvider;
        this.apiHelperProvider = apiHelperProvider;
        this.gsonProvider = gsonProvider;
        this.resourceHelperProvider = resourceHelperProvider;
    }

    @Override
    public AppDataManager get() {
        return newInstance(mContextProvider.get(), preferencesHelperProvider.get(), apiHelperProvider.get(), gsonProvider.get(), resourceHelperProvider.get());
    }

    public static AppDataManager_Factory create(Provider<Context> mContextProvider,
    Provider<PreferencesHelper> preferencesHelperProvider, Provider<ApiHelper> apiHelperProvider,
    Provider<Gson> gsonProvider, Provider<ResourceHelper> resourceHelperProvider) {
        return new AppDataManager_Factory(mContextProvider, preferencesHelperProvider, apiHelperProvider, gsonProvider, resourceHelperProvider);
    }

    public static AppDataManager newInstance(Context mContext, PreferencesHelper preferencesHelper,
    ApiHelper apiHelper, Gson gson, ResourceHelper resourceHelper) {
        return new AppDataManager(mContext, preferencesHelper, apiHelper, gson, resourceHelper);
    }
}
