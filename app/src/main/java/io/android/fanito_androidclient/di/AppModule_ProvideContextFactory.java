// Generated by Dagger (https://dagger.dev).
package io.android.fanito_androidclient.di;

import android.app.Application;
import android.content.Context;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideContextFactory implements Factory<Context> {
  private final Provider<Application> applicationProvider;

  public AppModule_ProvideContextFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Context get() {
    return provideContext(applicationProvider.get());
  }

  public static AppModule_ProvideContextFactory create(Provider<Application> applicationProvider) {
    return new AppModule_ProvideContextFactory(applicationProvider);
  }

  public static Context provideContext(Application application) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideContext(application));
  }
}
