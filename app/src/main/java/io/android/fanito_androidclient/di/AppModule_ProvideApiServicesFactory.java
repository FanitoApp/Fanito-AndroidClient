// Generated by Dagger (https://dagger.dev).
package io.android.fanito_androidclient.di;

import com.google.gson.Gson;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.android.fanito_androidclient.data.remote.ApiServices;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideApiServicesFactory implements Factory<ApiServices> {
  private final Provider<Gson> gsonProvider;

  private final Provider<OkHttpClient> okHttpclientProvider;

  public AppModule_ProvideApiServicesFactory(Provider<Gson> gsonProvider,
                                             Provider<OkHttpClient> okHttpclientProvider) {
    this.gsonProvider = gsonProvider;
    this.okHttpclientProvider = okHttpclientProvider;
  }

  @Override
  public ApiServices get() {
    return provideApiServices(gsonProvider.get(), okHttpclientProvider.get());
  }

  public static AppModule_ProvideApiServicesFactory create(Provider<Gson> gsonProvider,
      Provider<OkHttpClient> okHttpclientProvider) {
    return new AppModule_ProvideApiServicesFactory(gsonProvider, okHttpclientProvider);
  }

  public static ApiServices provideApiServices(Gson gson, OkHttpClient okHttpclient) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideApiServices(gson, okHttpclient));
  }
}
